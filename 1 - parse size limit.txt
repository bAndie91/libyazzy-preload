https://github.com/bAndie91/libyazzy-preload/blob/3f3ccaa4bfe5ab24b5f51c0df38af68389b0e370/src/recyclix.c#L478

> snprintf(number, 16>digits+1 ? digits+1 : 16, "%s", str+num_start);

Should just be:

> snprintf(number, sizeof number, "%s", str + num_start);

There is no benefit in calculating a more stringent limit than the size of the destination buffer.
If the value returned by snprintf is >= sizeof number, then truncation took place.

> size = atoi(number);

atoi won't handle 15 digit numbers (your int is 32 bits wide), and has no error checking, only undefined behavior on overflow. You want `strtoll`. Or perhaps `strtoull`.

via https://www.reddit.com/r/linux/comments/9vlrhp/transparent_recycle_bin_for_base_linux/e9dsj1t/
