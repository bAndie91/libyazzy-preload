{"author":{"id":"737a8210ad15a3b0faa813f350fa083d2c3cb4d6d580d8596bbc3c526756758c"},"ops":[{"type":6,"timestamp":1737370318,"nonce":"Klq0UDgT6WfKtyqbLd3O7s1/F6k=","target":"f27e012e896eb134ca736ef9a291b266d8df18b16ed0e53a6f624c881a57e83a","message":"https://github.com/bAndie91/libyazzy-preload/blob/3f3ccaa4bfe5ab24b5f51c0df38af68389b0e370/src/recyclix.c#L478\n\n\u003e snprintf(number, 16\u003edigits+1 ? digits+1 : 16, \"%s\", str+num_start);\n\nShould just be:\n\n\u003e snprintf(number, sizeof number, \"%s\", str + num_start);\n\nThere is no benefit in calculating a more stringent limit than the size of the destination buffer.\nIf the value returned by snprintf is \u003e= sizeof number, then truncation took place.\n\n\u003e size = atoi(number);\n\natoi won't handle 15 digit numbers (your int is 32 bits wide), and has no error checking, only undefined behavior on overflow. You want `strtoll`. Or perhaps `strtoull`.\n\nvia https://www.reddit.com/r/linux/comments/9vlrhp/transparent_recycle_bin_for_base_linux/e9dsj1t/\n\nDate:   Tue Sep 15 23:03:10 2020 +0200","files":null}]}